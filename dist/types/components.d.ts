/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface MrvlButton {
        "outline": boolean;
        "size": 'small' | 'medium' | 'large';
        "type": 'button' | 'submit';
    }
    interface MrvlCard {
    }
    interface MrvlCheckbox {
        "innerValue": string;
        "label": string;
        "name": string;
        "value": boolean;
    }
    interface MrvlForm {
        "name": string;
    }
    interface MrvlInput {
        "label": string;
        "name": string;
        "value": string;
    }
    interface MrvlTypography {
    }
    interface MyComponent {
        "count": number;
    }
}
export interface MyComponentCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMyComponentElement;
}
declare global {
    interface HTMLMrvlButtonElement extends Components.MrvlButton, HTMLStencilElement {
    }
    var HTMLMrvlButtonElement: {
        prototype: HTMLMrvlButtonElement;
        new (): HTMLMrvlButtonElement;
    };
    interface HTMLMrvlCardElement extends Components.MrvlCard, HTMLStencilElement {
    }
    var HTMLMrvlCardElement: {
        prototype: HTMLMrvlCardElement;
        new (): HTMLMrvlCardElement;
    };
    interface HTMLMrvlCheckboxElement extends Components.MrvlCheckbox, HTMLStencilElement {
    }
    var HTMLMrvlCheckboxElement: {
        prototype: HTMLMrvlCheckboxElement;
        new (): HTMLMrvlCheckboxElement;
    };
    interface HTMLMrvlFormElement extends Components.MrvlForm, HTMLStencilElement {
    }
    var HTMLMrvlFormElement: {
        prototype: HTMLMrvlFormElement;
        new (): HTMLMrvlFormElement;
    };
    interface HTMLMrvlInputElement extends Components.MrvlInput, HTMLStencilElement {
    }
    var HTMLMrvlInputElement: {
        prototype: HTMLMrvlInputElement;
        new (): HTMLMrvlInputElement;
    };
    interface HTMLMrvlTypographyElement extends Components.MrvlTypography, HTMLStencilElement {
    }
    var HTMLMrvlTypographyElement: {
        prototype: HTMLMrvlTypographyElement;
        new (): HTMLMrvlTypographyElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "mrvl-button": HTMLMrvlButtonElement;
        "mrvl-card": HTMLMrvlCardElement;
        "mrvl-checkbox": HTMLMrvlCheckboxElement;
        "mrvl-form": HTMLMrvlFormElement;
        "mrvl-input": HTMLMrvlInputElement;
        "mrvl-typography": HTMLMrvlTypographyElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface MrvlButton {
        "outline"?: boolean;
        "size"?: 'small' | 'medium' | 'large';
        "type"?: 'button' | 'submit';
    }
    interface MrvlCard {
    }
    interface MrvlCheckbox {
        "innerValue"?: string;
        "label"?: string;
        "name"?: string;
        "value"?: boolean;
    }
    interface MrvlForm {
        "name"?: string;
    }
    interface MrvlInput {
        "label"?: string;
        "name"?: string;
        "value"?: string;
    }
    interface MrvlTypography {
    }
    interface MyComponent {
        "count"?: number;
        "onTodoCompleted"?: (event: MyComponentCustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "mrvl-button": MrvlButton;
        "mrvl-card": MrvlCard;
        "mrvl-checkbox": MrvlCheckbox;
        "mrvl-form": MrvlForm;
        "mrvl-input": MrvlInput;
        "mrvl-typography": MrvlTypography;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "mrvl-button": LocalJSX.MrvlButton & JSXBase.HTMLAttributes<HTMLMrvlButtonElement>;
            "mrvl-card": LocalJSX.MrvlCard & JSXBase.HTMLAttributes<HTMLMrvlCardElement>;
            "mrvl-checkbox": LocalJSX.MrvlCheckbox & JSXBase.HTMLAttributes<HTMLMrvlCheckboxElement>;
            "mrvl-form": LocalJSX.MrvlForm & JSXBase.HTMLAttributes<HTMLMrvlFormElement>;
            "mrvl-input": LocalJSX.MrvlInput & JSXBase.HTMLAttributes<HTMLMrvlInputElement>;
            "mrvl-typography": LocalJSX.MrvlTypography & JSXBase.HTMLAttributes<HTMLMrvlTypographyElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
